{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"pointerEvents\", \"children\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { Platform } from 'expo-modules-core';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport createElement from 'react-native-web/dist/exports/createElement';\nfunction getElement(component) {\n  try {\n    return findDOMNode(component);\n  } catch (_unused) {\n    return component;\n  }\n}\nfunction setRef(refProp, ref) {\n  if (!refProp) return;\n  if (typeof refProp === 'function') {\n    refProp(ref);\n  } else if ('current' in refProp) {\n    refProp.current = ref;\n  }\n}\nvar Canvas = React.forwardRef(function (props, ref) {\n  return createElement('canvas', _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref\n  }));\n});\nvar CanvasWrapper = function CanvasWrapper(_ref) {\n  var pointerEvents = _ref.pointerEvents,\n    children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    size = _React$useState2[0],\n    setSize = _React$useState2[1];\n  var ref = React.useRef(null);\n  var _canvasRef = React.useRef(null);\n  function updateCanvasSize() {\n    var canvas = _canvasRef.current;\n    if (typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement) {\n      var _size = getSize();\n      var scale = PixelRatio.get();\n      canvas.style.width = _size.width + \"px\";\n      canvas.style.height = _size.height + \"px\";\n      canvas.width = _size.width * scale;\n      canvas.height = _size.height * scale;\n    }\n  }\n  function getSize() {\n    if (size) {\n      return size;\n    } else if (!ref.current || !Platform.isDOMAvailable) {\n      return {\n        width: 0,\n        height: 0\n      };\n    }\n    var element = getElement(ref.current);\n    var _element$offsetWidth = element.offsetWidth,\n      width = _element$offsetWidth === void 0 ? 0 : _element$offsetWidth,\n      _element$offsetHeight = element.offsetHeight,\n      height = _element$offsetHeight === void 0 ? 0 : _element$offsetHeight;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  var onLayout = function onLayout(event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n      width = _event$nativeEvent$la.width,\n      height = _event$nativeEvent$la.height;\n    if (width !== (size == null ? void 0 : size.width) || height !== size.height) {\n      setSize({\n        width: width,\n        height: height\n      });\n      if (props.onLayout) {\n        props.onLayout(event);\n      }\n    }\n  };\n  React.useEffect(function () {\n    if (ref.current != null) {\n      setSize(getSize());\n    }\n  }, [ref]);\n  React.useEffect(function () {\n    updateCanvasSize();\n  }, [size]);\n  React.useEffect(function () {\n    var canvas = _canvasRef.current;\n    if (canvas) {\n      updateCanvasSize();\n    }\n    setRef(props.canvasRef, canvas);\n  }, [_canvasRef]);\n  return React.createElement(View, _objectSpread(_objectSpread({}, props), {}, {\n    pointerEvents: \"box-none\",\n    ref: ref,\n    onLayout: onLayout\n  }), React.createElement(Canvas, {\n    ref: _canvasRef,\n    pointerEvents: pointerEvents,\n    style: StyleSheet.absoluteFill\n  }), children);\n};\nexport default CanvasWrapper;","map":{"version":3,"sources":["../src/Canvas.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from 'expo-modules-core';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { LayoutChangeEvent, PixelRatio, StyleSheet, View, ViewProps } from 'react-native';\nimport createElement from 'react-native-web/dist/exports/createElement';\n\nfunction getElement(component) {\n  try {\n    return findDOMNode(component);\n  } catch {\n    return component;\n  }\n}\n\nfunction setRef<T>(refProp: React.Ref<T>, ref: T | null) {\n  if (!refProp) return;\n\n  if (typeof refProp === 'function') {\n    refProp(ref);\n  } else if ('current' in refProp) {\n    // @ts-ignore\n    refProp.current = ref;\n  }\n}\n\nconst Canvas = React.forwardRef(\n  (props: React.ComponentProps<typeof View>, ref: React.Ref<HTMLCanvasElement>) =>\n    createElement('canvas', { ...props, ref })\n);\n\nconst CanvasWrapper: React.FunctionComponent<\n  ViewProps & {\n    canvasRef: React.Ref<HTMLCanvasElement>;\n  }\n> = ({ pointerEvents, children, ...props }) => {\n  const [size, setSize] = React.useState<{ width: number; height: number } | null>(null);\n\n  const ref = React.useRef<View>(null);\n  const _canvasRef = React.useRef<HTMLCanvasElement>(null);\n\n  function updateCanvasSize(): void {\n    const canvas = _canvasRef.current;\n    // eslint-disable-next-line no-undef\n    if (typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement) {\n      const size = getSize();\n      const scale = PixelRatio.get();\n\n      canvas.style.width = `${size.width}px`;\n      canvas.style.height = `${size.height}px`;\n\n      canvas.width = size.width * scale;\n      canvas.height = size.height * scale;\n    }\n  }\n\n  function getSize(): { width: number; height: number } {\n    if (size) {\n      return size;\n    } else if (!ref.current || !Platform.isDOMAvailable) {\n      return { width: 0, height: 0 };\n    }\n    const element = getElement(ref.current);\n    const { offsetWidth: width = 0, offsetHeight: height = 0 } = element;\n    return { width, height };\n  }\n\n  const onLayout = (event: LayoutChangeEvent) => {\n    const {\n      nativeEvent: {\n        layout: { width, height },\n      },\n    } = event;\n\n    if (width !== size?.width || height !== size.height) {\n      setSize({ width, height });\n\n      if (props.onLayout) {\n        props.onLayout(event);\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    if (ref.current != null) {\n      setSize(getSize());\n    }\n  }, [ref]);\n\n  React.useEffect(() => {\n    updateCanvasSize();\n  }, [size]);\n\n  React.useEffect(() => {\n    const canvas = _canvasRef.current;\n    if (canvas) {\n      updateCanvasSize();\n    }\n    setRef(props.canvasRef, canvas);\n  }, [_canvasRef]);\n\n  return (\n    <View {...props} pointerEvents=\"box-none\" ref={ref} onLayout={onLayout}>\n      <Canvas ref={_canvasRef} pointerEvents={pointerEvents} style={StyleSheet.absoluteFill} />\n      {children}\n    </View>\n  );\n};\n\nexport default CanvasWrapper;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}