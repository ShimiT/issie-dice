{"ast":null,"code":"export default function parseAssetCallback(assetName, callbackOrDictionary) {\n  if (typeof callbackOrDictionary === 'function') {\n    return callbackOrDictionary(assetName);\n  } else if (callbackOrDictionary !== null && typeof callbackOrDictionary === 'object') {\n    if (assetName in callbackOrDictionary) {\n      return callbackOrDictionary[assetName];\n    }\n    throw new Error(\"parseAssetCallback: object doesn't contain key: \" + assetName);\n  }\n  throw new Error('parseAssetCallback: prop `callbackOrDictionary` must be a function or object');\n}","map":{"version":3,"sources":["../../src/loaders/parseAssetCallback.ts"],"names":[],"mappings":"AAGA,eAAc,SAAU,kBAAkB,CACxC,SAAiB,EACjB,oBAA6C,EAAA;EAE7C,IAAI,OAAO,oBAAoB,KAAK,UAAU,EAAE;IAC9C,OAAQ,oBAAoC,CAAC,SAAS,CAAC;GACxD,MAAM,IACL,oBAAoB,KAAK,IAAI,IAC7B,OAAO,oBAAoB,KAAK,QAAQ,EACxC;IACA,IAAI,SAAS,IAAI,oBAAoB,EAAE;MACrC,OAAO,oBAAoB,CAAC,SAAS,CAAC;IACvC;IAED,MAAM,IAAI,KAAK,sDACsC,SAAS,CAC7D;EACF;EAED,MAAM,IAAI,KAAK,CACb,8EAA8E,CAC/E;AACH","sourcesContent":["type AnyFunction = (...args: any[]) => any;\ntype AnyObject = { [key: string]: any };\n\nexport default function parseAssetCallback(\n  assetName: string,\n  callbackOrDictionary: AnyFunction | AnyObject\n): any {\n  if (typeof callbackOrDictionary === 'function') {\n    return (callbackOrDictionary as AnyFunction)(assetName);\n  } else if (\n    callbackOrDictionary !== null &&\n    typeof callbackOrDictionary === 'object'\n  ) {\n    if (assetName in callbackOrDictionary) {\n      return callbackOrDictionary[assetName];\n    }\n\n    throw new Error(\n      `parseAssetCallback: object doesn't contain key: ${assetName}`\n    );\n  }\n\n  throw new Error(\n    'parseAssetCallback: prop `callbackOrDictionary` must be a function or object'\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}